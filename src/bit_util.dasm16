
:bit_pos    dat 0
:word_pos   dat 0

; a: 0x8000 or 0x0000
; j: dest addr
;----------------------------------------------------------------
:bit_read
;----------------------------------------------------------------
    set x, [word_pos]
    set a, [x]
    shl a, [bit_pos]
    and a, 0x8000

    set pc, bit_advance_1

;----------------------------------------------------------------
:bit_write
;----------------------------------------------------------------
    shr a, [bit_pos]
    set x, [word_pos]
    bor [x], a

:bit_advance_1
    add [bit_pos], 1
:bit_pos_check
    ifg [bit_pos], 15
        add [word_pos], 1

    and [bit_pos], 15
    set pc, pop

;----------------------------------------------------------------
:lbyte_write
;----------------------------------------------------------------
    shl a, 8

;----------------------------------------------------------------
:hbyte_write
;----------------------------------------------------------------
    set x, [word_pos]

    shr a, [bit_pos]
    bor [x], a
    set a, ex

    add [bit_pos], 8
    ifl [bit_pos], 16
        set pc, pop

    add x, 1
    and [bit_pos], 15

    bor [x], a
    set [word_pos], x

    set pc, pop

;----------------------------------------------------------------
:word_read
;----------------------------------------------------------------
    set x, [word_pos]
    set push, [x]
    shr [sp], [bit_pos]
    set a, ex

    add [word_pos], 1

    shl [sp], [bit_pos]
    bor a, pop

    set pc, pop

;----------------------------------------------------------------
:word_write
;----------------------------------------------------------------
    set x, [word_pos]

    shr a, [bit_pos]
    bor [x], a
    set a, ex

    add x, 1

    bor [x], a
    set [word_pos], x

    set pc, pop
